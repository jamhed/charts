{{- $tlsCrt := "" }}
{{- $tlsKey := "" }}
{{- $caCrt := "" }}
{{- if .Values.certificate.generate }}
{{- $ca := genCA "svc-cat-ca" 3650 }}
{{- $svcName := include "chart.fullname" . }}
{{- $cn := printf "%s.%s.svc" $svcName .Release.Namespace }}
{{- $altName1 := printf "%s.cluster.local" $cn }}
{{- $altName2 := printf "%s" $cn }}
{{- $server := genSignedCert $cn nil (list $altName1 $altName2) 365 $ca }}
{{- $tlsCrt = b64enc $server.Cert }}
{{- $tlsKey = b64enc $server.Key }}
{{- $caCrt =  b64enc $ca.Cert }}
{{- else }}
{{- $tlsCrt = required "Required when certificate.generate is false" .Values.certificate.server.tls.crt }}
{{- $tlsKey = required "Required when certificate.generate is false" .Values.certificate.server.tls.key }}
{{- $caCrt = required "Required when certificate.generate is false" .Values.certificate.ca.crt }}
{{- end }}
{{- $major := .Capabilities.KubeVersion.Major -}}
{{- $minor := .Capabilities.KubeVersion.Minor -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "chart.fullname" . }}
  namespace: {{ .Release.Namespace }}
data:
  tls.crt: {{ $tlsCrt }}
  tls.key: {{ $tlsKey }}
  ca.crt:  {{ $caCrt }}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ template "chart.fullname" . }}
  namespace: {{ .Release.Namespace }}
webhooks:
- name: pods.{{ template "chart.name" . }}.argovue.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ template "chart.fullname" . }}
      path: /pods
    caBundle: {{ $caCrt }}
  rules:
  - operations: ["CREATE"]
    apiGroups: ["*"]
    apiVersions: ["*"]
    resources: ["pods"]
  failurePolicy: {{ .Values.podsFailurePolicy }}
  namespaceSelector:
  {{- if .Values.namespaceSelector.matchLabels }}
    matchLabels:
{{ toYaml .Values.namespaceSelector.matchLabels | indent 6 }}
  {{- end }}
    matchExpressions:
    {{- if .Values.namespaceSelector.matchExpressions }}
{{ toYaml .Values.namespaceSelector.matchExpressions | indent 4 }}
    {{- end }}
    - key: name
      operator: NotIn
      values:
      - {{ .Release.Namespace }}
{{- if and (eq (int $major) 1) (ge (int $minor) 15) }}
  objectSelector:
    matchExpressions:
    {{- if .Values.objectSelector.matchExpressions }}
{{ toYaml .Values.objectSelector.matchExpressions | indent 4 }}
    {{- end }}
{{- end }}
